#include <atomic>
#include "valley/Plateau.hpp"
#include "ctagSoundProcessor.hpp"

namespace CTAG {
    namespace SP {
        class ctagSoundProcessorplatverb : public ctagSoundProcessor {
        public:
            virtual void Process(const ProcessData &) override;
            ctagSoundProcessorplatverb();
            virtual ~ctagSoundProcessorplatverb();

        private:
            virtual void knowYourself() override;

            Plateau * _plateau;

            // private attributes could go here
            // autogenerated code here
            // sectionHpp
	atomic<int32_t> decay, cv_decay;
	atomic<int32_t> room_size, cv_room_size;
	atomic<int32_t> dry, cv_dry;
	atomic<int32_t> wet, cv_wet;
    atomic<int32_t> diffusion, cv_diffusion;
    atomic<int32_t> pre_delay, cv_pre_delay;
	atomic<int32_t> input_low_damp, cv_input_low_damp;
	atomic<int32_t> input_high_damp, cv_input_high_damp;
	atomic<int32_t> reverb_low_damp, cv_reverb_low_damp;
	atomic<int32_t> reverb_high_damp, cv_reverb_high_damp;
	// sectionHpp
        };
    }
}